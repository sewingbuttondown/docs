[
  {
    "path": "/advanced-features/affiliate-program",
    "text": "Affiliate program Buttondown operates purely on word-of-mouth marketing; there are no paid ads or sponsored content or anything like that. Besides the warm feeling in my heart (and most certainly yours), there’s a great reason to spread the good word about Buttondown: the affiliate program! There’s no user-facing interface to track affiliate conversions or rewards at this point, but it’s something I plan on working on. If you’re interested in being in the beta,  email me  to let me know. Buttondown offers an affiliate program for you to recommend Buttondown to your audience while recurring a recurring  25%   commission  on all customers you send our way. It's easy to get set up: Sign up for Buttondown . Hopefully this one is easy — you should be using Buttondown to promote it, after all! Understanding what Buttondown offers as a tool and how it can help your audience is key. Share Buttondown with your audience . Use a   of your Buttondown username and a   of  . Sit back and wait for an email . I'm manually sending remittances at the moment, so I'll reach out to you once you have payouts ready! (I will automate this at some point, I promise.) ",
    "title": "Affiliate program",
    "description": "An explanation of Buttondown's affiliate program to incentivize you telling folks about your favorite newsletter platform."
  },
  {
    "path": "/advanced-features/customizing-your-emails",
    "text": "Customizing your emails Buttondown is fairly opinionated about the best emails being\nplain-text friendly and minimal, but it offers you a variety of ways\nto customize your email through HTML and CSS. What to avoid Most email clients don't support the wide variety of HTML and content that you can see on the web.\nThings like   elements, embedded videos, or custom layouts and fonts are hard if not impossible\nto replicate in the limited confines of your average inbox. This isn't a Buttondown limitation; it's a Gmail (or whomever) one. A brief (and inexhaustive) list of things that emails won't be able to handle: JavaScript or other run-time scripts . JavaScript is a programming language that makes web content interactive. It's common in websites, but the vast majority of email clients block scripts since they can hide malicious content. Avoid all JavaScript. . An   (inline frame) is an HTML element that embeds content from one website into another. Inline frames are often used to insert advertisements, video, audio, or forms in other websites. Iframes often contain scripts, so most email clients block them. embedded audio or video, such as Spotify or Bandcamp playlists . Autoplay and click-to-play media won't play in an inbox unless your subscriber's email client supports HTML5   and   tags. Only one major email client, Apple Mail, supports these tags, so it's best to avoid embedded media and consider an alternative. custom forms . Forms and interactive content is impossible in email. CSS3 . Unfortunately, the CSS standard that Gmail and other clients are working off of is fairly old. You'll want to extensively test any custom CSS you are using to make sure it plays nice with many browsers; when in doubt, default to CSS that worked in, say, 2005. Using web fonts in your email With the caveat that  not every email client supports custom web fonts , it's actually fairly easy to specify a custom web font! You'll just want to supply some custom CSS in your  Design settings page  like the following: Buttondown's default CSS Centering your emails Buttondown's emails are constrained in width and left-aligned by default. This is because I think it is readable and legible and scans easily. But if you want a center-aligned email, I won't begrudge you! It's very easy with CSS. Just apply the following rule: This will keep the text in your email left-aligned, but center the text in the browser: Customizing the Gmail icon of your email Unfortunately, this is out of my (or Buttondown)'s hands — the \"avatar\" or icon that shows up in an email in Gmail is just based on whether or not that email address is registered in Google's various systems. If you're sending from a Google-adjacent email address — say a domain registered in Google Suite, or a Gmail account directly — it should show up: otherwise, it won't. (Google is exploring support for BIMI, a protocol that allows services like Buttondown to arbitrarily provide icons: I'm monitoring these developments and will be pursuing them once they become generally available!) ",
    "title": "Customizing your emails",
    "description": "How to make your emails uniquely styled using CSS and Buttondown's tooling"
  },
  {
    "path": "/advanced-features/customizing-your-web-presence",
    "text": "Customizing your web presence Date format syntax ",
    "title": "Customizing your web presence",
    "description": "How to take advantage of Buttondown's CSS and custom settings to tailor your web presence"
  },
  {
    "path": "/advanced-features/email-automation",
    "text": "Email automation Building an activation sequence in Buttondown Unfortunately, you can't right now. I'm working on an  API  to let you do this, but in the meantime you can only specify a single  welcome email  to new subscribers. You can do this by going to your  Subscribing settings page : This is a pretty common request — perhaps the  most  common feature request I get. I realize that I'm disappointing folks by not supporting it at the moment! The reason I don't is because it's opening a bag of worms. There's no such thing as \"just a simple welcome sequence\" — as soon as you specify a string of emails, you have to specify arbitrary lengths between those strings, branching logic, tracking, etc. etc. It's a complex feature that I don't think I would be able to build simply and in the style of the rest of the tool. ",
    "title": "Email automation",
    "description": "Buttondown's support for email automation and drip sequences"
  },
  {
    "path": "/advanced-features/managing-multiple-newsletters",
    "text": "Managing multiple newsletters Buttondown makes it easy to manage multiple types or segments of subscribers using tags and  metadata , but sometimes that’s not enough. If you want to be able to completely separate out multiple verticals of a newsletter (and, say, keep track of different archives) or have two entirely different publications with disjoint subscriber bases, your best bet is to set them up as separate newsletters entirely. Thankfully, this is pretty easy! Adding another newsletter to your account Just mosey on over to your  Account  page and hit \"Add another newsletter\", towards the bottom: Switching newsletters Once you've added a newsletter to your account, you don't need a new login or username or anything. Just click the  switch active newsletter  button in your sidebar: this will bring up\na modal allowing you to swap between newsletters at will. FAQs If I have some subscribers in one newsletter and some more subscribers in another, how much will I be charged per month? Buttondown bills you based on your number of total  unique  subscribers across all of your newsletters. If you have 2,000 subscribers in one newsletter and 1,000 subscribers in another and they’re completely disjoint (meaning that nobody is subscribed to both), you’ll be billed as if you have 3,000 subscribers; if all of the folks in that second newsletter are subscribed to the first one, though, you’ll only be billed as if you have 2,000 subscribers. ",
    "title": "Managing multiple newsletters",
    "description": "How to run not one but multiple newsletters from the same Buttondown account"
  },
  {
    "path": "/advanced-features/markdown",
    "text": "Markdown Markdown is a lightweight markup language that makes it easy to add things like links, images, lists, and styles to plain text. It was created by  John Gruber  back in 2004 and has quickly become nigh-ubiquitous thanks to its simple goal: The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. There's a good chance that, even if you haven't heard of Markdown, you've used it before! It powers applications like Reddit and GitHub. Using Markdown is different than using a WYSIWYG editor. In an application like Microsoft Word, you click buttons to format words and phrases, and the changes are visible immediately. Markdown isn’t like that. When you create a Markdown-formatted file, you add Markdown syntax to the text to indicate which words and phrases should look different For example, to denote a heading, you add a number sign before it (e.g., # Heading One). Or to make a phrase bold, you add two asterisks before and after it (e.g.,  this text is bold ). It may take a while to get used to seeing Markdown syntax in your text, but it's very quick to learn. Markdown doesn’t have all the bells and whistles of word processors like Microsoft Word or other WYSIWYG editors, but it shines at creating simple, elegant documents — which is what Buttondown is all about. Markdown syntax guide If you're looking for a in-depth guide for more Markdown tips and tricks, I highly recommend the unofficial but authoritative  Markdown Guide . Buttondown's Markdown rendering engine Buttondown's Markdown rendering engine is  Python-Markdown . Some details about the gnarly implementation below:\nfeel free to ignore this unless you're a Buttondown (and/or Markdown) power user! Extensions In addition, Buttondown uses a handful of extensions: smarty , to convert ASCII characters into HTML entities tables , to allow basic tables footnotes , to allow basic footnotes. (These are rendered in your online archives using  Bigfoot.js ) fenced_code , to allow a more common approach for embedding code snippets pymdownx.tilde , for allowing of deletions and subscripts CodeHilite , for syntax highlighting of code snippets Embeds In addition to all of  those , Buttondown uses some proprietary extensions for embedding things like tweets, YouTube videos, and gifs — but none of these should affect your general rendering experience. If you're looking for an escape hatch out of these embeds, they only trigger on links that are on self-contained lines, like the following: So you can avoid it by simply doing something like: Tables of contents If you're interested in creating a table of contents in your Buttondown newsletter, be sure to\nuse  names  (such as  ) rather than  ids  (such as  )! Gmail\nand many other email clients strip   tags from emails, which will break internal links. ",
    "title": "Markdown",
    "description": "All about Markdown, both broadly speaking and Buttondown's specific variant of Markdown"
  },
  {
    "path": "/advanced-features/metadata",
    "text": "Metadata What is metadata? This is a great question! The short answer is \"structured key-value data\". As of this writing, you can only apply metadata to subscribers, meaning that you can attach any sort of key-value pairs you'd like to your subscribers. This can be things like identifying information such as first and last names, so you can apply \"mail merges\" to your newsletter; or it could be for internal use only, such as customer IDs to tie subscribers back to your web application. I'd recommend also reading up on  Stripe's explanation of metadata  — Buttondown's implementation and philosophy behind it is very similar. What constitutes valid metadata? Internally, metadata is stored as raw JSON, so you can be pretty liberal with what you place into it. (If you try and view or set metadata using the Buttondown interface, there will likely be some stringification issues — for complex use cases, it's recommended to use the API or an integration like Zapier.) Adding metadata Interested in adding metadata to your subscribers? Learn more about doing so in the  metadata section of building your subscriber base . Searching for metadata You can search for metadata in Buttondown by using the   notation. For instance, if you want to find all subscribers with a metadata key-value pair of  , you type in  : At the moment, this does not work with more than one key-value pair;   will not do what you would like it to. (It will  eventually , though!) Programmatically using metadata. Interested in setting metadata via the API? Check out the  API documentation ! ",
    "title": "Metadata",
    "description": "An explanation of how to store, use, and think about metadata in Buttondown"
  },
  {
    "path": "/advanced-features/monetizing-your-newsletter",
    "text": "Monetizing your newsletter Enabling Stripe Tax for your newsletter If you're an author of a paid newsletter — particularly one based in the EU, where VAT is a bit more of a bugbear — dealing\nwith taxes can be a headache. I highly recommend onboarding to  Stripe Tax , which simplifies and automates the process of collecting and reporting\ntaxes. Buttondown doesn't actually need to do anything in particular to let you take advantage of Stripe Tax. If you are only using your Stripe account\nfor your newsletter. You'll be setting two default tax codes: A default product tax code of  Digital newsletter -- subscription . A default shipping tax code of  Shipping . (This doesn't have much of an effect, because digital goods are not shipped.) Your tax settings page should look like the below: Gift subscriptions Gift subscriptions are available for paid newsletters — they're a way for you to manually gate in a subscriber who you want to receive premium emails even if they haven't paid. (Like, if they're friends or family or something like that.) From Buttondown's perspective, they are a paid subscriber, but the gift recipient will never be prompted to pay and will receive a notification that they've been gifted a premium subscription. As of right now, gift subscriptions last forever. If you're interested in short-lived gift subscriptions, I recommend setting up a  free trial  for your paid newsletter! Disabling the credit card prompt for paid newsletters If you have a newsletter that is specifically based on free trials or some other bespoke flow, you might find it useful to disable the credit card prompt so prospective subscribers aren't asked to pay as soon as they put in their credit card information. You can do this by adding the   param of   to your URL. For instance, if you had a paid newsletter at, say,  , you'd change it to  ! Pay what you want In particular, Buttondown now supports a  Pay What You Want  model if you want to allow your subscribers to be patrons and support your writing without gating any specific content. You can head over to the  Paid Subscriptions  page to get started. Additionally, you can do one of two things if you’re looking for something more akin to a patronage model: Set a payment tier for your paid newsletter and then only release “free” emails. This gives subscribers the ability to sustainably support your writing without actually gating any content behind that subscription. Drop a link in your newsletter to  ko-fi  or  Buy Me a Coffee  to let folks support your work if they are so inclined. Mixing free and paid content You specify each outgoing email as a \"free\" post going to all subscribers or a \"premium\" post going to just paid subscribers. Letting premium subscribers view old premium emails To grant your premium subscribers the ability to read your full back catalog, you have two options. Using the Buttondown interface If you go to your  subscribers  page and tap on a subscriber, you'll get a customized Archives link that you can manually send them which contains a full archive of all your posts, free and premium: Using shortcodes If you want to provide a link in your emails to each subscriber's paid archive, you can use the following shortcake: This generates a unique-per-subscriber ID for their paid specific paid archives. Like the link generated through Buttondown's interface, it will expire once the subscriber's paid subscription lapses. A common tactic is to reference it in your footer for  all  paid subscribers, like so: FAQs Do paid subscriptions automatically renew? Yup. By default, a subscriber's paid subscription will automatically renew for the same amount of time as the original subscription at the end of their billing cycle (ie every month or every year),\nrather than being prompted to pay again. This is deliberate; it generates more revenue for you and is a nicer, more fluid experience for your readers. There's no way to opt out of this behavior; if you're\ninterested in forcing your subscribers to manually renew their subscriptions, you'll want to manage payments outside of Buttondown. Does Buttondown support tiers? Unfortunately, tiers are not supported at this time. How do subscribers cancel their premium subscription? Cancelling a premium subscription is easy! Just unsubscribe from the newsletter just like any other one. If you’re interested in remaining a free subscriber, re-subscribe and you’ll be back in business. Why doesn't Buttondown take a cut? I have a longer, more rambling answer, but I'll start with the short version:  Buttondown makes money by charging for features and infrastructure . Paid newsletters is a feature, not a business model: it is a capability you get. \"But aren't incentives aligned when you take a cut of my profit?\", you might find yourself asking. Well —  sort of . It means that my incentives are very well aligned with a certain brand of writer/publication: one who is already making a whole lot of money, who has a very large social graph, and whose path of generating money is solely through paid subscriptions. There are lots of great writers who fit that profile — but most of my favorite newsletters do not. I want to make sure that I focus on the core parts of making Buttondown great: an elegant, useful interface and focus on the  writing  experience, and I wanted to intentionally choose a pricing model that fits that. \"But you charge based on subscriber count!\", you might respond. Yeah! I don't love that — it was explicitly designed to make sure that Buttondown doesn't have any customers who are  in the red,  which is to say that they are a net-negative on my bottom line. I don't have venture capital; I want this to be a sustainable business for the next twenty years, and that means I need to make sure I at least break even for each customer. The \"pay-per-thousand subscribers\" pricing is successful at that, even if its inelegant and I'd rather have a more easily-digestible pricing model at some point in the future. On a more business-minded note, I also feel that the current iteration of most paid subscription platforms — both inside and outside the world of newsletters — is a fairly naive wrapper around platform APIs like Stripe Connect. On a long-term (or even medium-term — say, three-to-five years) horizon, charging rent on top of those abstractions is not sustainable: the margin available for the taking is going to go down to zero, rather than 10% or whatever. It's important that I have a business model that is resilient to that happening. ",
    "title": "Monetizing your newsletter",
    "description": "How Buttondown can turn your newsletter into an income stream"
  },
  {
    "path": "/advanced-features/template-variables",
    "text": "Template variables Template variables are a concept that have multiple names: \"mail merges\" might be one you're more familiar with if you have a marketing and email background. The concept is\nto add snippets in your email that are programmatically replaced when Buttondown sends out an email; this allows you to customize your content per-subscriber or to repeat certain\nkey concepts in your email without having to change them over and over again. Template variable library ",
    "title": "Template variables",
    "description": "How to use template variables to customize and supercharge your emails"
  },
  {
    "path": "/api-reference/authentication",
    "text": "Authentication Clients should authenticate by passing the token key in the   HTTP header, prepended with the string  (note the trailing space!). For example: You can find your API key in your  Programming page . ",
    "title": "Authentication",
    "description": "How to authenticate API requests to Buttondown's servers"
  },
  {
    "path": "/api-reference/changelog",
    "text": "Changelog The changelog provides a list of dated updates, each of which contains a number of potentially backwards-incompatible changes. There is no explicit versioning in the API at this time; all changes will be either compatible or breaking. (If I attempt any brittle changes to the API that may break current implementations, I'll be sure to add version gates.) 2021-11-26 Took the ability to send specific emails to subscribers out of beta; added  , which allows you to send\nreminders to your subscribers to confirm their email address. 2021-08-27 Added support for Exports via the   endpoint. 2021-01-02 Added support to set and retrieve metadata on Emails. 2020-12-23 Added deletion and update abilities to the Scheduled emails endpoint, giving you much more programmability than the hitherto append-only state of the world. 2020-12-09 Added a deletion endpoint to the Images endpoint, allowing you to delete unused images. ",
    "title": "Changelog",
    "description": "Everything that's new in Buttondown's API"
  },
  {
    "path": "/api-reference/drafts/",
    "text": "Drafts The draft object A draft looks like this: ",
    "title": "Drafts",
    "description": "An API reference for the 'draft' object in Buttondown"
  },
  {
    "path": "/api-reference/emails/",
    "text": "Emails Emails are what you're for here on Buttondown at the end of the day, right? Creating an email via the API is just like creating one in the interface; it will instantly trigger sending actual emails, based on the tags and email type you provide. The email object An email looks like this: Email types Email types govern the visibility of an email, both in the sense of to whom it is originally delivered and whom can view it\nafter it's been sent out. By default, all emails are public. ",
    "title": "Emails",
    "description": "An API reference for the 'email' object in Buttondown"
  },
  {
    "path": "/api-reference/events-and-webhooks",
    "text": "Events and Webhooks Events are Buttondown's way of telling you that something interesting has happened to your newsletter, and webhooks are Buttondown's\nway of letting you react to various incoming events. For example, when a new subscriber signs up for your newsletter, Buttondown creates\nand emits a   event; when that subscriber unsubscribes, Buttondown creates a   event. If you wanted\nto, say, create a Slack notification or run some application code whenever something in Buttondown happens, you'd create a webhook for the concomitant\nevent and point it towards your application. The payload of most events are fairly simple, and look something like this: Events ",
    "title": "Events and webhooks",
    "description": "How to get a full lens of your Buttondown newsletter through structured data"
  },
  {
    "path": "/api-reference/exports/",
    "text": "Exports Some software applications may want programmatic access to their newsletter exports. This assists with a few niche\nuse cases, such as regular backups or data ingestion (into a data warehouse), or post-publishing processes that hinge\non email events. In general, you probably won't  need  to use this endpoint unless you  absolutely  need to use this endpoint. The export object An export looks like this: ",
    "title": "Exports",
    "description": "An API reference for the 'export' object in Buttondown"
  },
  {
    "path": "/api-reference/images/",
    "text": "Images Images are, well, images! Buttondown allows you to upload images to its secure  S3  bucket and do with them what you will. This is sort of an odd duck of an API, to be sure, but if you want to be able to do things like draft and send emails completely on your iPad you need a surefire way of creating images. The image object An image looks like this: ",
    "title": "Images",
    "description": "An API reference for the 'image' object in Buttondown"
  },
  {
    "path": "/api-reference/introduction",
    "text": "Introduction Hello and welcome to Buttondown's API schema! I've designed Buttondown's API to be as RESTful and uninteresting as possible: if there's a primitive in Buttondown, you should have a nice interface for it, with the ability to retrieve, create, modify, and delete. This means that with a few lines in your language of choice, you're able to programmatically keep track of your subscribers, send out new emails, and more. If you're confused about what Buttondown is, try going to  buttondown.email . If you're looking for where to find your API Key, check your  Programming page . Whenever Buttondown's API changes, those changes will be posted on the  changelog  and on  Twitter . Keeping our API reference accurate, up-to-date and easy to understand is really important. If you have any questions, spot any mistakes or want to give us any feedback, just drop me a line! Lastly, if you'd like to just download the OpenAPI spec for Buttondown, you can do so  here . ",
    "title": "Introduction",
    "description": "An introduction to thinking about Buttondown's API"
  },
  {
    "path": "/api-reference/newsletters/",
    "text": "Newsletters The newsletter object A newsletter looks like this: ",
    "title": "Newsletters",
    "description": "An API reference for the 'newsletter' object in Buttondown"
  },
  {
    "path": "/api-reference/scheduled-emails/",
    "text": "Scheduled emails Scheduled emails are analogous to, well, scheduled emails; emails that you create to be sent at some point in the future. Depending on your integration, it might make more sense for you to create scheduled emails ahead of time rather than wait to create an email at exactly the time you want it going out (and, just like emails scheduled via Buttondown's UI, scheduled emails created via the API will automatically be sent out without requiring any further intervention.) The scheduled email object A scheduled email looks like this: ",
    "title": "Scheduled emails",
    "description": "An API reference for the 'scheduled email' object in Buttondown"
  },
  {
    "path": "/api-reference/subscribers/",
    "text": "Subscribers Subscribers are the main way you collect email addresses and recipients on Buttondown.\nThey're what you see on your  subscribers page . The subscriber object A subscriber looks like this: Listing subscribers Subscriber types If Buttondown cannot create a new subscriber with the email address you've provided, there are a few likely reasons why. They're enumerated below: A subscriber with that email has already been unsubscribed. That email address ( justin@gmail.com ) is already subscribed. That email address ( justin@gmail.com ) is already subscribed, but has not confirmed their email. That email address ( justin@gmail.com ) is already subscribed, but has not provided payment. ",
    "title": "Subscribers",
    "description": "An API reference for the 'subscriber' object in Buttondown"
  },
  {
    "path": "/api-reference/tags/",
    "text": "Tags The tag object A tag looks like this: ",
    "title": "Tags",
    "description": "An API reference for the 'tag' object in Buttondown"
  },
  {
    "path": "/behind-the-scenes/esoterica",
    "text": "Esoterica My favorite newsletters Want to read some of my favorites for inspiration? (Don't worry, they're not my favorites just because they're on Buttondown — as you'll see from some of the links!) Money Stuff  by  Matt Levine Dept. of Enthusiasm  by  Jez Burrows Cryptography Dispatches  by  Filippo Valsorda Letters to Summer  by  Summer and Jillian ",
    "title": "Esoterica",
    "description": "Various odds and ends from running Buttondown"
  },
  {
    "path": "/behind-the-scenes/funding",
    "text": "Funding open-source software Software sits on the shoulders of giants. Buttondown is a tool that simply would not exist without the gargantuan effort of many,  many  open-source projects, the vast majority of which are drastically underfunded relative to the value they provide. I've committed to donating at least 10% of Buttondown's profits to the software that enables it. This is a relatively low number in absolute terms — I'm certainly not changing anyone's life — but I think it's still important. (As of June 1, 2021, I'm still looking to donate $95. If I can't identify any relevant projects by the end of the month, I'll bump up existing donations.) (The final tally: since the start of this initiative, I've donated $5,982 to projects relevant to Buttondown's success. That's not that much, and yet it is much more than many companies ten times as large as Buttondown.) ",
    "title": "Funding",
    "description": "Information about how much Buttondown contributes back to open source software"
  },
  {
    "path": "/behind-the-scenes/kudos",
    "text": "Kudos Buttondown is a labor of love, and I'm deeply indebted to all the folks who have helped along the way: whether its sharing Buttondown (I have no paid marketing, and rely on word of mouth!) or suggesting a feature or supplying a bug report. (Think your name should be on this list? You're probably right!  Email me  and I'll get it added.) ",
    "title": "Kudos",
    "description": "Thanks to folks who have submitted bug reports or feature suggestions"
  },
  {
    "path": "/behind-the-scenes/running-costs",
    "text": "Running costs When I was a younger version of myself, I was always curious about the complex chain of dependencies that even a relatively simple web app requires. As such, I try and run Buttondown as transparently as possible: I update this page at the start of every month to reflect new expenses and growth. (Unfortunately, Notion doesn't lend itself well to time-series data, so you can't see growth over time.) My general philosophy on spending money for Buttondown is to default towards it, within reason: Buttondown doesn't have external funding, so I can't exactly  burn  through my checking account with wild abandon, but it's also not the thing I depend on to make a living, so I can afford to take some liberties. Anyway, all of that is to say: none of these are probably  that  surprising, but I hope you find it interesting! Click through each item to read more about how I use it. (You may also be interested in Buttondown's  sustainable funding  of open source software.) In addition, there's some stuff I've spent money on in the past and no longer do so: ",
    "title": "Running costs",
    "description": "Information about how much Buttondown pays for stuff"
  },
  {
    "path": "/getting-started/billing",
    "text": "Billing Reaching the free tier's cap Buttondown is free for your  first thousand subscribers  and requires a small monthly fee for more than that, because sending emails and running servers ain't cheap! (You can read more on our  pricing page .) That being said, it would be awful if you esuddenly hit a thousand subscribers and didn't have a chance to register a credit card and so additional subscribers would be shown the door — that doesn't happen! You can continue to accrue subscribers past a thousand, you just can't send any emails to them until you fill out your  billing information . FAQs Does Buttondown offer a non-profit discount? Buttondown does not offer a non-profit discount at the moment. Does Buttondown offer an annual discount? Yes! Two months free every year with an annual purchase. Email me and I'll get you set up. If Buttondown changes prices at some point, am I grandfathered into my current price? Yup. You will never have to pay more suddenly just because I want to experiment with price segmentation. ",
    "title": "Billing",
    "description": "Information about Buttondown's premium services"
  },
  {
    "path": "/getting-started/building-your-subscriber-base",
    "text": "Building your subscriber base Using HTML Go over to the  embedding and sharing page  and Buttondown will walk you through exactly how this is done: You can see what this looks like below: Adding tags to your subscribers Using query parameters If you're using Buttondown's subscribe page (e.g.  ), you can automatically add new tags to new subscribers by adding a  query parameter  to the URL, such as: This will automatically give folks who subscribe through the link a tag named  . If you want to apply multiple tags at once, you can add multiple such query parameters: Using HTML If you'd prefer to use HTML, augment your form to add an   tag with a name of  . (You can supply multiple inputs; Buttondown will apply  all  tags.) An example is below. Note that the   associated with the tag being passed over is the  name  of the tag, not the  ID ; you can in fact supply either one and Buttondown\nwill do the right thing (including automatically creating a tag with the given name if no such tag exists). Adding metadata to your subscribers On your Buttondown subscribe form Buttondown's subscription form doesn't ask for any metadata by default; it's only interested in your subscribers' email address.\n(And their payment information, if you're running a paid newsletter.) If you're interested in collecting more information, though, you can add  custom subscribe form inputs . (This is a bit of a mouthful, I know!) You can find these\nat the bottom of your  design settings page . Inputs have three attributes: A  key , which corresponds with the key that will be set in the metadata for your subscriber. A  label , which is the text that will be displayed to the user. Whether or not the metadata is  required . If the metadata is required, then the input is required to be filled out by the subscriber. Using HTML I'm a fan of showing, not telling, so I'll lead with the relevant code sample: JSFiddle The trick is to set inputs with the   of  , as you can see in the code sample above: Note that these can be freeform text inputs, like above, or   inputs if you instead want to invisibly augment your subscription forms with given metadata. (For instance, you can imagine setting metadata for everyone coming through a particular tag or webpage.) Another example playground is below: Automatically sending an email to new subscribers You can do this by going to your  Subscribing settings page  and checking out the section entitled  I'd like to send my new subscribers... : Dealing with spammy subscribers Chances are, this is because you're using an embedded subscription widget and you don't have subscription confirmation turned on. First off — you should turn that on! I'll be building out captcha support in the future as well but in the meantime, if you still are seeing lots of spammy subscribers  email me  and I'll take a look. FAQs Captcha support I am piloting a program using  https://www.hcaptcha.com/  and will be bringing it (on an opt-in basis) to GA soon! Instagram Instagram's browser is a little, uh, finicky. Take out the   attribute from the form tag and you should be good to go. medium To embed your subscription widget in Medium, all you need to do is post the link to your newsletter (e.g.  https://buttondown.email/jmduke ) in Medium — it should automatically embed. ",
    "title": "Building your subscriber base",
    "description": "Tips and resources for growing your subscribers and imbuing them with data"
  },
  {
    "path": "/getting-started/hosting-on-a-custom-domain",
    "text": "Hosting on a custom domain There's no security, performance, or product-level benefit from hosting your newsletter on a custom domain. But,\nI think we all have to admit it — it's a little bit cooler.   is simply a cooler and perhaps\neven more impressive domain than   or  . And there's nothing wrong with that! if you want to establish your newsletter as an independent entity, not simply a \"Buttondown newsletter\",\nsetting up a custom domain on which to host it makes a lot of sense. Setting up your custom hosting domain If you're not signed up for  Buttondown for Professionals , go ahead and  upgrade your account ! Add the custom domain in your  settings page . Change the   record of the domain you'd like to use as your custom domain to  . The prompt should walk you through the rest of the process? Using a subdomain of  This isn't possible to do in the UI, but there are no technical limitations.  Email me  and I'll get it wired up for you! The difference between hosting domains and sending domains Hosting on a custom domain  means using a domain outside of   to host your newsletter and archives — for example,  newsletter.jmduke.com . Sending from a custom domain  means setting up your DNS records so that Buttondown sends outgoing emails from your domain, improving reputation and delivery metrics. Hosting requires you sign up for  Buttondown for Professionals ; sending does not. This is because, well, sending emails that  actually get delivered  is pretty dang important, and it's scummy to hide that behind a paywall. Can I use the same domain for hosting and sending? Unfortunately, some DNS providers will not let you set up the exact same domain or subdomain for both sending emails and as your custom archive. For these DNSes, we recommend setting up completely separate subdomains — something along the lines of the following:  for your custom newsletter domain (where folks view archives and subscribe to your newsletter)  for your custom sending domain (where outgoing emails come from) This is the best option to preserve the deliverability of your newsletter (and, frankly, most people are not particularly confused by this at all.) ",
    "title": "Hosting on a custom domain",
    "description": "A step-by-step guide through setting up a custom domain to host your newsletter"
  },
  {
    "path": "/getting-started/importing-your-data",
    "text": "Importing your data Importing subscribers If you import a large number of subscribers, I'll temporarily disable your account so Buttondown can review the imported emails and make sure they're all up to code. The process shouldn't take more than a few hours! Navigate to your  settings page  and click  Import subscribers!  You'll be prompted to upload a CSV: Once you do so, you can map each column in your CSV, allowing you to bring in subscribers while keeping their existing tags, join dates, and metadata. Importing archives Navigate to your  settings page  and choose the appropriate service! (If you don't see the service you're looking for, just go ahead and  email me  — I'd be more than happy to migrate them for you!) FAQs I'm importing my subscribers from another newsletter service. Do they have to confirm their email address again? Assuming that the subscribers have  already consented  to receiving email (via double-opt-in or some other mechanism provided by your previous subscriber), no! GDPR-wise, their existing consent carries over to Buttondown. Adding a listserv? Be sure that folks on the listserv are expecting the subscription: if one of them clicks to unsubscribe from the newsletter, it will affect the entire listserv (since from Buttondown's perspective, the listserv is a single subscriber.) ",
    "title": "Importing your data",
    "description": "A launchpad for integrating your data from a previous newsletter tool"
  },
  {
    "path": "/getting-started/registration-and-setup",
    "text": "Registration & setup The 'your address' field You may be surprised to learn that CAN-SPAM legislation requires all potentially commercial newsletters to have a physical address in the footer of their emails. This (rightfully!) skeezes some folks out. If you're running a business out of your office and you want subscribers to have an accurate location to contact you (perhaps to send physical goods), feel free to use your own address. Otherwise, Buttondown has a virtualized address that you can use for your own needs! We automatically scan and forward along the relevant mail. By using this address, you agree to a few things: You are a current user of Buttondown; You are only using this address for Buttondown purposes; You cede full right and permission to Buttondown, LLC to open and analyze mail addressed to the address; You understand that we won't forward any physical mail or packages. System / browser requirements Buttondown is entirely based in the browser: you don't need to download anything to use the application. Personally, I recommend using Safari or Chrome as your browser (with all due respect to Firefox and the long tail: Safari and Chrome are the two browsers I use so I'm most confident in their usage). You  will  need to have cookies and JavaScript enabled to get Buttondown working properly, as well as popups (Buttondown uses in-browser popups for certain workflows.) ",
    "title": "Registration & setup",
    "description": "A step-by-step guide to get you up and running on Buttondown"
  },
  {
    "path": "/getting-started/scheduling-an-email",
    "text": "Scheduling an email Scheduling an email is easy and — well, not  fun , but not  not  fun. Click the \" Sending immediately \" button in the Write view to choose a time at which to send your email. When you're ready to send the email, click the blue \" Schedule to your subscribers \" button to set a time to schedule it! Note : Your email will not be scheduled until you confirm your schedule by hitting that big blue button in step two! This trips up a lot of people; for that I apologize. FAQs If I schedule an email for next week, will it go out to subscribers who have joined between now and then? Yes! The “send to 1239 subscribers” (or maybe more — or maybe less — who am I to judge?) count appearing in the interface is an estimate, not a sacrosanct guideline. If you schedule an email for two weeks from now, that email will still send to folks who have subscribed between now and then, not just the 1239 who exist right once you hit the button. (Think of it as the computer equivalent of you manually logging in and going and hitting send — nothing gets set in stone!) ",
    "title": "Scheduling an email",
    "description": "A step-by-step guide through sending your email at a later date"
  },
  {
    "path": "/getting-started/sending-from-a-custom-domain",
    "text": "Sending from a custom domain Unlike  hosting on a custom domain  which is largely a cosmetic\nfeature, there are significant benefits to sending your emails from a custom domain. By default, Buttondown sends your emails from its own domain and webserver. This is a good thing — it means when you are first\nstarting your newsletter you can focus on writing, editing, and growing instead of dealing with arcane DNS issues. However, as your newsletter matures it becomes a better idea to think about sending directly from your domain instead. This has a number of benefits: Your emails look more professional. Open and click rates are non-trivially improved for newsletters that are coming from, say,   instead of  . You can start accruing \"domain reputation\" for your own domain. This improves the overall engagement rate for your emails. More importantly, that domain reputation carries with you — even if you leave Buttondown for another service, so long as that service also allows you to send from a custom domain. Dealing with emails that are ending up in spam If you're not using a custom sending domain, then this is likely because you're sending your email from Buttondown's mail servers, but 'signing' it with your own email address. This looks like spam (or at least mistaken identity) to most mailboxes, especially if you're sending from a   or   account. To remediate this, you should send your emails directly from Buttondown: This will cause emails to come from  your-username@mg.buttondown.email , which will have very high deliverability: Dealing with 'softfails' due to SPF Depending on your newsletter configuration, you might have been asked to set up an  SPF entry  for your custom domain. This is a DNS record that begins with the string: However, this record can only be used once in a single domain.  If you're using the same custom email domain for Buttondown and for an inbox provider such as GSuite, you need to take an extra step\nto combine the two records. Instead of having two separate records, like: and The proper solution is actually to edit the existing one into something like that references both domains:  Otherwise, some mailboxes may read the GSuite one and ignore the Mailgun one (set by Buttondown), causing a softfail and thus lower deliverability. The difference between hosting domains and sending domains Hosting on a custom domain  means using a domain outside of   to host your newsletter and archives — for example,  newsletter.jmduke.com . Sending from a custom domain  means setting up your DNS records so that Buttondown sends outgoing emails from your domain, improving reputation and delivery metrics. Hosting requires you sign up for  Buttondown for Professionals ; sending does not. This is because, well, sending emails that  actually get delivered  is pretty dang important, and it's scummy to hide that behind a paywall. Can I use the same domain for hosting and sending? Unfortunately, some DNS providers will not let you set up the exact same domain or subdomain for both sending emails and as your custom archive. For these DNSes, we recommend setting up completely separate subdomains — something along the lines of the following:  for your custom newsletter domain (where folks view archives and subscribe to your newsletter)  for your custom sending domain (where outgoing emails come from) This is the best option to preserve the deliverability of your newsletter (and, frankly, most people are not particularly confused by this at all.) ",
    "title": "Sending from a custom domain",
    "description": "A step-by-step guide through setting up a custom domain to send your newsletter"
  },
  {
    "path": "/getting-started/sending-your-first-email",
    "text": "Sending your first email Uploading images Uploading images is easy! You can just drag and drop them into the main text area of your email; it'll be automatically uploaded to S3 and inserted into the text. Buttondown uses Amazon S3 (a fairly common file hosting platform) to safely and securely store your images. They last indefinitely by default; there's no interface to delete images that you've uploaded to Buttondown, but you can do so via the API (or email me and I can manually delete them on your behalf.) This means that even if you were to delete the email in which images are referenced, the images themselves still exist on Buttondown's servers. Custom unsubscribe links This answer assumes a baseline familiarity with Markdown. Buttondown automatically appends an unsubscribe link to the footer of all emails you send, but you may want to manually place one in your email as well (for instance, at the top of the email, if it's an infrequent newsletter). To generate the unsubscription URL, use the   shortcode. Combining this with Markdown, a link would look something like: (This link will render on draft emails, but the resultant URL won't do anything of importance. I'm working on a better solution so you can 'click through' and verify that the URL is well-formed.) Tags and segmentation Buttondown offers  tags  to do this; subscribers can have one or more tags. You can send emails including (or excluding!) certain tags, making it easy to\ntailor your newsletters' content to who's going to enjoy it the most or find it the most relevant There are many ways to apply a tag to a subscriber, once you've created them: Customizing your  subscription form Manually tagging them Setting them via the  API Mail merges A mail merge is a catch-call term for sending out emails with specific fields changed. For example, being able to send out an email that says something like: Hello, {first_name}! With \"{first_name}\" being replaced by the first name of the recipient of that email. Buttondown supports mail merges through subscriber metadata. You can set metadata for a given subscriber either via the API or manually, by going to the \"Notes\" section for a given subscriber: You can then refer to metadata (such as the metadata above) in your email by using the following variable:  . You can also conditionally show a paragraph if metadata is set using a snippet like the following: Sending emails based on an RSS feed You'll want to get set up with our  Zapier integration . After sending Updating your email's slug If you update the slug of an email that's already been sent out, worry not! The old link that references an old slug will still work; Buttondown keeps track of historical slugs for each email and redirects readers who go to the old link accordingly. Updating your email's issue number Buttondown tries to be clever with determining what issue number your newsletter is on. Sometimes it is either  too  clever or not nearly clever enough, though, and you end up in a situation where your seventh issue is showing up as your eighth or vice-versa. This is particularly pernicious as a problem if you're bringing in archives from another system. You can manually edit your issue numbers by going to the  Edit Email  screen in your Archive page. The  ID  field corresponds with the issue number: In particular, Buttondown will respect your existing issue numbers and always go one greater than the largest issue number, so if you change your most recent email to be the \"right\" number everything subsequent from that should be in order. (And, of course, you can disable issue numbers altogether by signing up for Buttondown for Professionals.) Adding share links to your email You can add share links to your email by customizing your newsletter's footer in your  Design settings  page. Then, you can add custom Markdown links using some template variables that Buttondown assigns you: Interested in other social networks besides Twitter and Facebook?  Email me  and I'll add them! FAQs A warning about the in-browser preview This is a common and unfortunate question. The short answer is:  email is weird, email inboxes are weird, and there's nothing you or I or anyone can do about it.  Buttondown's markdown previewing is meant to closely resemble the inbox from a content perspective (links and HTML tags and all of those things appear as they should), but will never be able to accurate resemble the inbox from a  stylistic  perspective (things being arranged and formatted as you'd expect.) Our friends over at Litmus have a  really useful, detailed answer : Web-based email clients (such as  Outlook.com  or Gmail) will certainly perform most the tasks listed above, but they also have a larger, more difficult job. They have to prepare the HTML to be converted into HTML that's safe to show within their own email client's HTML. This is a surprisingly difficult thing to do and most web-based email clients' preprocessors will err on the side of being overly restrictive and removing anything with even the slightest potential to affect the layout of their email client. We'll cover the various mistakes made by these preprocessors a little later, but you should expect this to be the second biggest cause of headaches when designing HTML emails - the first biggest cause is still to be discussed. Why is my email all ...purple? If you're previewing multiple drafts of an email in Gmail, you might notice that the text is all purple! This isn't a Buttondown thing — this is Gmail thinking that multiple emails sent in the same day with the same subject are responses to one another, and it displays the thread of emails in a \"conversation view\". You can read about Gmail's conversation view  here : The purple colouration is a display only feature that only exists in the display where it is being seen. It is not sent in any messages and you can use Gmail's show original feature to verify that - you will need to know a little about HTML coding. The colour is applied to text that is repeated from a previous message in the current conversation and the reason it is visible to recipients is because they also are using Gmail and they also have copies of previous messages in the current conversation. What gets coloured in their conversation might be quite different from what gets coloured in yours. How do I avoid the \"Promotions\" tab in Gmail? Ah, yes. The dreaded Promotions tab. Every author wants their email to be read as much as possible, and emails that show up in the 'primary' inbox in Gmail are\ngoing to be read much more often than ones in secondary tabs like Promotions. I think the trap a lot of authors fall into is thinking that the Promotions tab is the  enemy . It's not: it's the friend of your subscribers!\nGmail is making a concerted effort to make the process of reading email better, and it's your job to make sure your email stands out. Coincidentally, the way you make sure your email shows up in the right place is also the way you make sure that your email doesn't show up in spam\n(and is read & interacted with in general): Avoid using too many links or images, giving the impression that the email is low-quality or used solely for directing readers elsewhere. Send emails that are not too short, or not too long. (500 to 750 words is a pretty good area to aim for.) Cull subscribers that aren't opening or interacting with your content. A major input into Gmail and other inbox's decisions is how often it sees\nreaders clicking, opening, and replying to emails — the higher those numbers are, the more likely it is that it's a legitimate email. Note, of course, that this is not a foolproof method. There isn't one: Gmail's various categorization schemes are a deliberate black box, but\ntime and time again the best way to land in your subscribers' primary inbox is to just produce great content. You can read more about avoiding the Promotions tab  here, on SalesHandy . ",
    "title": "Sending your first email",
    "description": "A step-by-step guide through sending your first email on Buttondown"
  },
  {
    "path": "/",
    "text": "Welcome! Buttondown is the easiest way to start and grow your newsletter. Okay, that's a lofty and nice-sounding mission, but what does it mean in practice? In a nutshell, Buttondown lets you do a handful of things really well: Build your list of subscribers (via embeds, hosted pages, API integrations, and more) and imbue them with interesting data Host your archives without the hassle of setting up a separate blog or website Send out clean, minimal emails with extremely high engagement rates Where do I get started? If you're a complete novice to the whole newsletter game, I'd recommend kicking things off by reading the entire  Getting started  section,\nstarting with  Registration & setup . By the end of that section, you'll be well-equipped to\ngrow your newsletter. If you're coming from a different newsletter provider or ESP and are ready to rock, check out the guide to  importing your data :\nthis will point you in the right direction to set up shop. If you're a programmer interested in messing around with the API, check out the  API reference's introduction . ",
    "title": "Welcome",
    "description": "A kind and gentle introduction to Buttondown, the best way to run your newsletter."
  },
  {
    "path": "/integrations/fathom",
    "text": "Fathom Fathom  is a simple, privacy-friendly alternative to Google Analytics. To hear the Fathom folks describe it: Our entire company is built on putting digital privacy first. We're GDPR, CCPA, ePrivacy, PECR (and more) compliant. Our business model is selling software, not selling data. Because of this, Fathom doesn't require annoying cookie notices. Connecting your Fathom account to Buttondown To wire up your Fathom account to your Buttondown newsletter, all you need to do is create a new site: Once you've done so, you'll receive a new embed code, as seen below: Go ahead and  email me  that \"Site ID\" (  in the above screenshot) along with your username and I can take care of the rest! Adding a Fathom goal for new subscribers Fathom has a concept of 'goals' that is roughly analogous to events or actions. To quote  their documentation : So goals are useful for things like button clicks, form submissions or the loading of very important pages, like ecommerce success pages (after someone buys your product). You can create unlimited goals in Fathom, and each goal completion counts towards your page view limits on your pricing plan. If you're using Fathom to track your Buttondown account's analytics, you likely want to track  conversion rate  — the number of folks who show up on your subscribe page that ultimately subscribe. The easiest way to do this is to create a custom goal for \"subscribing\". Once you've done so, email me with the goal ID and I can get it wired together for you! ",
    "title": "Fathom",
    "description": "An explanation of how to connect your Fathom account to Buttondown"
  },
  {
    "path": "/integrations/plausible",
    "text": "Plausible Plausible is a simple, privacy-friendly alternative to Google Analytics. It's fully compliant with GDPR, CCPA, and PECR, and offers no cookie use whatsoever. It's a great way to learn more about your site and your subscribers & visitors while respecting their privacy. Integrating with your Plausible Analytics account is simple and takes all of five minutes! You can integrate with your newsletter and track viewers of your archives, plus see what visitors are clicking on the most and which of your archive pages are most effective at getting folks to subscribe. Signing up for Plausible This guide assumes that you're already an active user of Plausible, and have set up a site previously. If not, consult  Plausible's documentation  to get started. Connecting your Plausible account to Buttondown To get your Buttondown information into Plausible (and vice-versa), you need to do two things: Create a site matching your Buttondown newsletter.  Note that this should match your permanent archive URL; if you have purchased a  custom domain , use that instead of  . Send  an email to me  letting me know you have a Plausible account.  It'll take less than five minutes for me to connect the wires and have you up and running! Tracking new subscribers The \"new subscriber\" event is similar to the  subscriber.created  event type: it will fire on  all  new subscribers, even if they haven't confirmed their subscription. In order to track new subscribers signing up for your newsletter, add a new  custom event  to your Plausible site with the exact text of  . That's all you need to do: Buttondown will automatically record new goals (including which page your subscriber is on!) whenever you get a new subscriber. Tracking outbound link clicks In order to track folks clicking through links on your archive, add a new  custom event  to your Plausible site with the exact text of  . That's all you need to do: Buttondown will automatically record new goals (including which page your subscriber is on!) whenever you get a new subscriber. Verify that your newsletter is all wired up correctly Lastly, go to your website's dashboard on Plausible and you should start to see data trickle in! Feel free to play around with it by clicking through links and creating a test subscriber: you should see those events show up in the  Goal conversions  section of your dashboard. ",
    "title": "Plausible",
    "description": "An explanation of how to connect your Plausible account to Buttondown"
  },
  {
    "path": "/migration-guides/mailchimp",
    "text": "Mailchimp Importing your subscribers (contacts) Mailchimp contacts are like Buttondown subscribers. Export your Mailchimp contacts  here . Go to  https://buttondown.email/settings . You may need to log in first. Scroll to the bottom of the page. Click the  Import subscribers  button at the bottom of the page, then choose the .csv file you just downloaded from Mailchimp. Importing your archives (campaigns) Mailchimp campaigns are like Buttondown archives. Export your Mailchimp campaigns  here . Go to  https://buttondown.email/settings . You may need to log in first. Scroll to the bottom of the page. Click the  Import archives  button at the bottom of the page, then choose the .csv file you just downloaded from Mailchimp. You did it! Once you finish all of the above steps, Buttondown will kick off an audit and migration process to make sure everything is in order. Then you should be safe to disable or deactivate your Mailchimp account. FAQs Do subscribers need to re-enter their credit card? Mailchimp and Buttondown use the same payments processor —  Stripe . Stripe has your subscribers' information: credit cards purchases subscriptions You bring your subscribers' history to Buttondown when you connect your Stripe account to Buttondown. You will have their payment histories, too. Your paying subscribers do not need to do anything extra when you switch to Buttondown . Just email me when you've connected your Stripe account. I'll take care of the rest, for free! P.S. Over time, I'd like to make this process a little more automatic but at the moment it requires a bit of manual labor on my part to make sure everything is wired up correctly (free of charge, of course.) ",
    "title": "Mailchimp",
    "description": "A step-by-step guide of migrating from Mailchimp to Buttondown"
  },
  {
    "path": "/migration-guides/substack",
    "text": "Substack Importing your data (This guide assumes that you have already registered a Buttondown account. If you haven't head on over to  Registration & setup .) Obtain a full export of your Substack data.  Follow this  Substack support article  to export your data. You'll end up receiving a   file filled with subscriber and archive data — that's the magic ticket! Upload your subscriber data . Go to your  Settings page  and click on the \"Import subscribers\" button at the bottom of the page; you should be prompted to upload a CSV. Find the CSV in your Substack   and upload it; you'll be prompted to map some of the\nfields in that export to Buttondown ones in order to make sure Buttondown understands your previous subscribers. Upload your archive data . Go back to your  Settings page and click on the \"Import archives\" button, choosing the \"Substack\" option. This time, you can upload the entire   file, not just the CSV — Buttondown\nwill parse it and pull out all your previous emails, marking them as free or paid-only as appropriate. Connect your Stripe account . Lastly, if you offer paid subscriptions and want to migrate your paid subscribers over, head over to the  Paid subscriptions  page and go ahead and connect your Stripe account. Be sure to connect the same account you used for Substack, and not a new one — Stripe needs access to the previous account and payments in order to ensure that subscribers are mapped over gracefully. That's it! Once you've done all of the above steps, Buttondown will kick off an audit and migration process to make sure everything is in tip-top order, and then you should be safe to disable or deactivate your Substack account. FAQs Do subscribers need to re-enter their credit card? Both Substack and Buttondown use the same payments processor —  Stripe . Stripe is actually the source of truth when it comes to things like your subscribers' registered payment methods (ie credit cards) and what they've purchased / subscribed to. When you connect your Stripe account to Buttondown, you're also bringing over the history of what customers and subscribers you have and what they've paid. Over time, I'd like to make this process a little more automatic but at the moment it requires a bit of manual labor on my part to make sure everything is wired up correctly (free of charge, of course.) What this means for you is  your paying subscribers don't need to do anything extra on their end just because you're switching providers . Just email me when you've connected your Stripe account and I'll take of the rest! Importing 'founding members' Buttondown can handle the  existing  \"pay what you want\" prices for subscribers but not allow them to change the amount they're paying (beyond unsubscribing and resubscribing). Additionally, Buttondown supports a  Pay What You Want  model if you want to allow your subscribers to be patrons and support your writing without gating any specific content. You can head over to the  Paid Subscriptions  page to get started. ",
    "title": "Substack",
    "description": "A step-by-step guide of migrating from Substack to Buttondown"
  },
  {
    "path": "/migration-guides/tinyletter",
    "text": "Tinyletter Importing your data (This guide assumes that you have already registered a Buttondown account. If you haven't head on over to  Registration & setup .) Obtain a full export of your Tinyletter data.  Follow this  Tinyletter support article  to export your data. You'll end up receiving a   file filled with subscriber data — that's the magic ticket! Upload your subscriber data . Go to your  Settings page  and click on the \"Import subscribers\" button at the bottom of the page; you should be prompted to upload a CSV. Find the CSV you just downloaded and upload it; you'll be prompted to map some of the\nfields in that export to Buttondown ones in order to make sure Buttondown understands your previous subscribers. Upload your archive data . Go back to your  Settings page  and click on the \"Import archives\" button, choosing the \"Tinyletter\" option. This time, type in your Tinyletter username! That's it! Once you've done all of the above steps, Buttondown will kick off an audit and migration process to make sure everything is in tip-top order, and then you should be safe to disable or deactivate your Tinyletter account. ",
    "title": "Tinyletter",
    "description": "A step-by-step guide of migrating from Tinyletter to Buttondown"
  },
  {
    "path": "/need-more-help/",
    "text": "Need more help? I tried to put as much information as I could about how to use Buttondown\nin this guide, but I'm sure I'm missing a lot of things. Email me at  justin@buttondown.email \nand I'll answer your question as quickly as possible to the best of my ability! ",
    "title": "Need more help?"
  },
  {
    "path": "/odds-and-ends/exporting-your-data",
    "text": "Exporting your data To export your data, hit the ol' Export Data button at the bottom of your settings page: ",
    "title": "Exporting your data",
    "description": "An explanation of backing up your data off of Buttondown"
  },
  {
    "path": "/odds-and-ends/offboarding",
    "text": "Offboarding If you want to delete your Buttondown account, no hard feelings! Hit the \"delete your account\" button\nat the bottom of your  Account page  and our data will be  instantly \nremoved from our servers. (There's no recovering this, so be sure to  export your data  beforehand if you need your data!) FAQs I'm moving to a different website or platform. Can I point my old Buttondown page to my new URL? Yes!  Send me an email  and I can wire that up for you. ",
    "title": "Offboarding",
    "description": "How to stop using Buttondown safely and easily"
  },
  {
    "path": "/odds-and-ends/privacy-and-security",
    "text": "Privacy and security Why Buttondown requires Javascript on archive pages No interesting reason, just technical debt! This is something I hope to improve\nin the future. GDPR compliance Buttondown is of course fully GDPR compliant. You can read Buttondown's privacy policy  here  and its cookie policy  here . If you're interested in a full data request, please  email me . Bug bounty Sadly, Buttondown doesn't have the security budget to offer a bug bounty,  but  I would be deeply indebted to you for doing so! Please report any vulnerabilities to  justin@buttondown.email  — I promise to respond promptly and provide a fix as soon as humanly possible. Sincere kudos to the following individuals for reporting vulnerabilities: John Bullecer Vivek Modi Filippo Valsorda Iheanyi Ekechukwu Turning off link or click tracking Go to your  account settings page  and check the \"opt out of analytics\" checkbox!: Adult content policy My default stance is to support all content so long as it is not harassing, damaging, or otherwise illegal. However,  paid newsletters  are a bit of a different story. Buttondown uses  Stripe  to process payments; Stripe has some restrictions on adult content. Specifically, it prohibits: Pornography and other obscene materials (including literature, imagery and other media) depicting nudity or explicitly sexual acts; sites offering any sexually-related services such as prostitution, escorts, pay-per view, adult live chat features; sexually oriented items (e.g., adult toys); adult video stores and sexually oriented massage parlors; gentleman's clubs, topless bars, and strip clubs; sexually oriented dating services Unfortunately, that means things are out of my hands: if you want to send adult content over Buttondown you cannot use its paid subscriptions functionality. Financial assistance to writers No. In the event that I  started  such a practice, I would publish information about what heuristic I used as well as a full list of writers receiving such assistance. But I will almost certainly never do this. It is a violation of Buttondown's core ethos, which is that Buttondown is a tool rather than an ecosystem — a piece of software, rather than a platform. It's important to me that people using Buttondown are, at the end of the day, writing  newsletters , not  Buttondowns . WCAG compliance Buttondown follows the  compliance checklist as outlined by HHS . If you have any other specific questions regarding Buttondown's accessibility, I'd be happy to answer — and if there are any specific accessibility gaps that you identify\nin Buttondown, please let me know! I'd be happy to prioritize a fix. ",
    "title": "Privacy & security",
    "description": "Various privacy and security aspects important to Buttondown (and its users)"
  }
]